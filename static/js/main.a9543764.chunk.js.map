{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Messages.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","Greeting","name","setNameCallback","addUser","totalUsers","inputClass","greeting","onKeyDown","count","GreetingContainer","users","addUserCallback","setName","setError","length","trimmedName","trim","HW3","setUsers","newUser","_id","v1","Affair","props","priorityClass","item","affair","priority","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","CnAll","filter","active","CnHigh","CnMiddle","CnLow","setFilter","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","f","filterAffairs","deleteAffair","Message","messages","src","avatar","alt","angle","content","message","time","messageData","HW1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a9543764.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1blyt\",\"button\":\"Affairs_button__2QWeS\",\"active\":\"Affairs_active__PYrNG\",\"item\":\"Affairs_item__3Uut_\",\"high\":\"Affairs_high__I7rk_\",\"middle\":\"Affairs_middle__3u6U_\",\"low\":\"Affairs_low__2Klg_\",\"affair\":\"Affairs_affair__RDKgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3-7w7\",\"avatar\":\"Messages_avatar__38RUc\",\"content\":\"Messages_content__29JKl\",\"angle\":\"Messages_angle__1IEd-\",\"text\":\"Messages_text__ZGhCH\",\"name\":\"Messages_name__s0cM3\",\"time\":\"Messages_time__3BjG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2HxaC\",\"greeting\":\"Greeting_greeting__8jAel\",\"input\":\"Greeting_input__2pfJY\",\"error\":\"Greeting_error__3ozzX\",\"errorInput\":\"Greeting_errorInput__MKk6a\",\"button\":\"Greeting_button__2I27f\",\"count\":\"Greeting_count__2DGIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__35wTs\",\"superInput\":\"SuperInputText_superInput__2uzQG\",\"errorInput\":\"SuperInputText_errorInput__3wvUI\",\"error\":\"SuperInputText_error__2JU4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__d2s_o\",\"red\":\"SuperButton_red__3Jc3v\",\"button\":\"SuperButton_button__3WuST\",\"olink\":\"SuperButton_olink__g3Xtk\",\"blink\":\"SuperButton_blink__24WEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2n_Ca\",\"column\":\"HW4_column__25iji\",\"testSpanError\":\"HW4_testSpanError__3RGFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2Ypla\",\"checkbox\":\"SuperCheckbox_checkbox__2die_\",\"spanClassName\":\"SuperCheckbox_spanClassName__2_6DR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3y5Xe\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput :s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void// need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input        // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <div><input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyDown={onEnter}\n            />\n                <div className={ s.error}>{error}\n                </div>\n            </div>\n       \n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n// const GreetingContainer =(props: GreetingContainerPropsType)=> {\n\n    const [name, setName] = useState<string>('') // need to fix any\n\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName=(e.currentTarget.value.trim())\n        if(trimmedName){\n            setName(trimmedName)\n            setError('')\n        }else{\n            setName('')\n            setError('name is require  ')\n        }\n    }\n    const addUser = () => {\n            addUserCallback(name)\n        alert(`Hello ${name} !`) // need to fix\n        setName(\"\")\n    }\n    const onEnter =(e:KeyboardEvent<HTMLInputElement>)=>{\n        if(e.key === 'Enter' && name){\n            addUser()\n        }\n\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport {v1} from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([\n\n    ]) // need to fix any\n\n    const addUserCallback = ( name: string) => { // need to fix any\n         // need to fix\n      const newUser = {_id: v1(), name}\n        setUsers([...users,newUser])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}\n\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n    const priorityClass = s.item +' '+ s[props.affair.priority]\n\n    return (\n\n        <div>\n            <div className={s.affair}>\n                <div className={s.item}>{props.affair.name}</div>\n                <div className={priorityClass}>[{props.affair.priority}]</div>\n\n                <button onClick={deleteCallback} className={s.item + ' ' + s.button}>X</button>\n            </div>\n\n            {/*<button onClick={deleteCallback}>X</button>*/}\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n    // const set = ( e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\n    //     props.setFilter(e.currentTarget.value as FilterType)\n    // }\n    const CnAll = s.button + ' ' + (props.filter === 'all' ? s.active : '')\n    const CnHigh = s.button + ' ' + (props.filter === 'high' ? s.active : '')\n    const CnMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active : '')\n    const CnLow = s.button + ' ' + (props.filter === 'low' ? s.active : '')\n    // const setClass = (filter: FilterType) => {\n    //     return s.button + (props.filter === filter ? ' ' + s.active : '')\n    // }\n    return (\n        <div className={\"block\"}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={CnAll}>All</button>\n            <button onClick={setHigh} className={CnHigh}>High</button>\n            <button onClick={setMiddle} className={CnMiddle}>Middle</button>\n            <button onClick={setLow} className={CnLow}>Low</button>\n\n\n            {/*<button onClick={set} className={setClass('all')} value={'all'}>All</button>*/}\n            {/*<button onClick={set} className={setClass('high')} value={'high'}>High</button>*/}\n            {/*<button onClick={set} className={setClass('middle')} value={'middle'}>Middle</button>*/}\n            {/*<button onClick={set} className={setClass('low')} value={'low'}>Low</button>*/}\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType) => { // need to fix any\n    if (filter === 'all') return affairs\n        // else if (filter === 'high') {return affairs.filter(f => f.priority === 'high')}\n        // else if (filter === 'low') {return affairs.filter(f => f.priority === 'low')}\n        // else if (filter === 'middle') {return affairs.filter(f => f.priority === 'middle')}\n        // else {\n        //\n        // }\n    // return []\n    else return affairs.filter(f => f.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {        // need to fix any\n    return affairs.filter(f => f._id !== _id)\n\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Messages.module.css'\n\nexport type MessagesPropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n\n}\n\n\nfunction Message(props: MessagesPropsType) {\n    return (\n        <div className={s.messages}>\n            <img src={props.avatar} alt={'avatar'} className={s.avatar}/>\n\n            <div className={s.angle}></div>\n\n                <div className={s.content}>\n                    <div className={s.name}>{props.name}</div>\n                    <div className={s.text}>{props.message}</div>\n                    <div className={s.time}>{props.time}</div>\n\n\n                </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport s from './App.module.css'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}